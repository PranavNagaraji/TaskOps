-- ===== EMPLOYEE VERIFICATION TABLE =====
CREATE TABLE EMPLOYEE_VERIFICATION (
    VERIFICATION_ID NUMBER PRIMARY KEY,
    EMPLOYEE_ID NUMBER NOT NULL,
    VERIFIED_BY NUMBER, -- Admin/User ID
    VERIFIED_AT TIMESTAMP,
    STATUS VARCHAR2(20) DEFAULT 'Pending', -- Pending / Approved / Rejected
    DOCUMENT_PATH VARCHAR2(255),
    REMARKS VARCHAR2(255),
    CONSTRAINT FK_VERIFICATION_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID)
        REFERENCES EMPLOYEES(EMPLOYEE_ID) ON DELETE CASCADE,
    CONSTRAINT FK_VERIFIED_BY FOREIGN KEY (VERIFIED_BY)
        REFERENCES USERS(ID) ON DELETE SET NULL,
    CONSTRAINT CHK_VERIFICATION_STATUS CHECK (UPPER(STATUS) IN ('PENDING','APPROVED','REJECTED'))
);

-- ===== SEQUENCE =====
CREATE SEQUENCE EMPLOYEE_VERIFICATION_SEQ
START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- ===== TRIGGER =====
CREATE OR REPLACE TRIGGER EMPLOYEE_VERIFICATION_BEFORE_INSERT
BEFORE INSERT ON EMPLOYEE_VERIFICATION
FOR EACH ROW
BEGIN
    :NEW.VERIFICATION_ID := EMPLOYEE_VERIFICATION_SEQ.NEXTVAL;
END;
/

-- ===== OPTIONAL: AUTO-CREATE VERIFICATION ENTRY WHEN EMPLOYEE JOINS =====
CREATE OR REPLACE TRIGGER AUTO_CREATE_VERIFICATION
AFTER INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    INSERT INTO EMPLOYEE_VERIFICATION (EMPLOYEE_ID, STATUS)
    VALUES (:NEW.EMPLOYEE_ID, 'Pending');
END;
/
